{"version":3,"file":"static/js/17.6974e70d.chunk.js","mappings":"0MACA,EAAuB,mB,SCKvB,EAJa,SAACA,GACZ,OAAO,gBAAKC,UAAWC,EAAa,SAAEF,EAAMG,UAC9C,E,SCHA,EAAuB,wBAAvB,EAAyD,2BAAzD,EAA8F,2BAA9F,EAAmI,2BCoEnI,EA/DkB,SAACH,GACjB,OAAoCI,EAAAA,EAAAA,WAAS,GAAM,eAA5CC,EAAU,KAAEC,EAAa,KAC1BC,GAAiBC,EAAAA,EAAAA,UACjBC,GAAeD,EAAAA,EAAAA,UAqBrB,OACE,UAAC,EAAAE,SAAQ,YACP,SAAC,KAAM,CACLC,KAAMN,EACNO,QAAS,iBACP,+DAA+D,KAGnE,SAAC,EAAI,WACH,kBACEC,QAlBiB,WACvBP,GAAc,EAChB,EAiBQL,UAAWC,EACXY,SA/BR,SAA2BC,GACzBA,EAAMC,iBAEN,IAAMC,EAAgBV,EAAeW,QAAQC,MACvCC,EAAcX,EAAaS,QAAQC,MAIzCnB,EAAMqB,WAAW,CAAEC,OAAQL,EAAeM,KAAMH,GAClD,EAsBoC,UAE3BpB,EAAMwB,YACL,gBAAKvB,UAAWC,EAAgB,UAC9B,SAACuB,EAAA,EAAc,OAInB,iBAAKxB,UAAWC,EAAgB,WAC9B,kBAAOwB,QAAQ,SAAQ,qBACvB,kBAAOC,KAAK,OAAOC,GAAG,SAASC,IAAKtB,QAEtC,iBAAKN,UAAWC,EAAgB,WAC9B,kBAAOwB,QAAQ,OAAM,mBACrB,qBAAUE,GAAG,OAAOE,KAAK,IAAID,IAAKpB,QAEpC,gBAAKR,UAAWC,EAAgB,UAC9B,mBAAQ6B,QAjCY,WAC5BzB,GAAc,EAChB,EA+BkDL,UAAU,MAAK,gCAQnE,E,kBCzCA,EAnBiB,SAACD,GACd,OAA+BgC,EAAAA,EAAAA,GAAQC,EAAAA,IAAhCC,EAAW,EAAXA,YAAaC,EAAM,EAANA,OACdC,GAAUC,EAAAA,EAAAA,OAEhBC,EAAAA,EAAAA,YAAU,WACQ,cAAXH,GACCC,EAAQG,KAAK,UAErB,GAAG,CAACJ,EAAOC,IAQX,OAAO,SAAC,EAAS,CAACI,UAAsB,YAAXL,EAAsBd,WAN3B,SAACN,GACrBmB,EAAYnB,GACZqB,EAAQG,KAAK,UACjB,GAIJ,C","sources":["webpack://react-complete-guide/./src/components/UI/Card.module.css?26d0","components/UI/Card.js","webpack://react-complete-guide/./src/components/quotes/QuoteForm.module.css?b10c","components/quotes/QuoteForm.js","components/pages/NewQuote.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"card\":\"Card_card__9h8Dh\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"QuoteForm_form__ogBoi\",\"loading\":\"QuoteForm_loading__gyIuQ\",\"control\":\"QuoteForm_control__8SqBM\",\"actions\":\"QuoteForm_actions__I8AC6\"};","import { Fragment, useRef, useState } from \"react\";\nimport { Prompt } from \"react-router-dom\";\nimport Card from \"../UI/Card\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./QuoteForm.module.css\";\n\nconst QuoteForm = (props) => {\n  const [isEntering, setIsEntering] = useState(false);\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  const formFocusHandler = () => {\n    setIsEntering(true);\n  };\n\n  const finishEnteringHandler = () => {\n    setIsEntering(false);\n  };\n\n  return (\n    <Fragment>\n      <Prompt\n        when={isEntering}\n        message={() =>\n          \"Are you sure you want to leave? All your entered will be lost\"\n        }\n      ></Prompt>\n      <Card>\n        <form\n          onFocus={formFocusHandler}\n          className={classes.form}\n          onSubmit={submitFormHandler}\n        >\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor=\"author\">Author</label>\n            <input type=\"text\" id=\"author\" ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor=\"text\">Text</label>\n            <textarea id=\"text\" rows=\"5\" ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button onClick={finishEnteringHandler} className=\"btn\">\n              Add Quote\n            </button>\n          </div>\n        </form>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;\n","import QuoteForm from '../quotes/QuoteForm';\n\nimport { useHistory } from 'react-router-dom';\nimport useHttp from '../../hooks/use-http';\nimport { addQuote } from '../../lib/api';\nimport { useEffect } from 'react';\n\nconst NewQuote = (props) => {\n    const {sendRequest, status}  = useHttp(addQuote);\n    const history = useHistory();\n\n    useEffect(() => {\n        if(status === 'completed'){\n            history.push('/quotes');\n        }\n    }, [status,history])\n\n    const addQuoteHandler = (event) => {\n        sendRequest(event);\n        history.push('/quotes');\n    }\n\n\n    return <QuoteForm isLoadind={status === 'pending'} onAddQuote={addQuoteHandler}></QuoteForm>\n}\n\nexport default NewQuote;"],"names":["props","className","classes","children","useState","isEntering","setIsEntering","authorInputRef","useRef","textInputRef","Fragment","when","message","onFocus","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","isLoading","LoadingSpinner","htmlFor","type","id","ref","rows","onClick","useHttp","addQuote","sendRequest","status","history","useHistory","useEffect","push","isLoadind"],"sourceRoot":""}