{"version":3,"file":"static/js/949.f1e8bff1.chunk.js","mappings":"4MACA,EAAuB,wB,SCkBvB,EAhBkB,SAACA,GACjB,OACE,gBAAIC,UAAWC,EAAa,WAC1B,+BACE,iCACE,uBAAIF,EAAMG,UAEZ,gCAAaH,EAAMI,aAErB,SAAC,KAAO,CAACC,GAAE,kBAAaL,EAAMM,IAAOL,UAAU,MAAK,+BAK1D,EChBA,EAAuB,wBAAvB,EAAyD,2BCoCzD,EA/BkB,SAACD,GACjB,IAAMO,GAAUC,EAAAA,EAAAA,MACVC,GAAWC,EAAAA,EAAAA,MAGXC,EAA2C,QAD7B,IAAIC,gBAAgBH,EAASI,QAChBC,IAAI,QAOrC,OACE,UAAC,EAAAC,SAAQ,YACP,gBAAKd,UAAWC,EAAgB,UAC9B,oBAAQc,QAPe,WAC3BT,EAAQU,KAAK,iBAAmBN,EAAe,OAAS,OAC1D,EAK4C,kBAAOA,EAAe,OAAS,MAAK,UAE5E,eAAIV,UAAWC,EAAa,SACzBF,EAAMkB,OAAOC,KAAI,SAACC,GAAK,OACtB,SAAC,EAAS,CAERd,GAAIc,EAAMd,GACVF,OAAQgB,EAAMhB,OACdD,KAAMiB,EAAMjB,MAHPiB,EAAMd,GAIX,QAKZ,E,oCCFA,EA1BkB,WACd,OAAyDe,EAAAA,EAAAA,GAAQC,EAAAA,IAAc,GAAxEC,EAAW,EAAXA,YAAaC,EAAM,EAANA,OAAcC,EAAY,EAAlBC,KAAoBC,EAAK,EAALA,MAMhD,OAJAC,EAAAA,EAAAA,YAAU,WACNL,GACJ,GAAG,CAACA,IAEU,YAAXC,GACU,gBAAKvB,UAAU,WAAU,UAC9B,SAAC4B,EAAA,EAAc,MAIpBF,GACQ,eAAG1B,UAAU,iBAAgB,cAAG0B,EAAK,OAGjC,cAAXH,GAA4BC,GAAwC,IAAxBA,EAAaK,QAItD,SAAC,EAAS,CAACZ,OAAQO,KAHf,SAACM,EAAA,EAAa,GAM7B,C,mEC9BA,EAA2B,gC,SCa3B,EAXsB,WACpB,OACE,iBAAK9B,UAAWC,EAAiB,WAC/B,6CACA,SAAC,KAAI,CAACD,UAAU,MAAMI,GAAG,aAAY,2BAK3C,C","sources":["webpack://react-complete-guide/./src/components/quotes/QuoteItem.module.css?127c","components/quotes/QuoteItem.js","webpack://react-complete-guide/./src/components/quotes/QuoteList.module.css?9d5d","components/quotes/QuoteList.js","components/pages/AllQuotes.js","webpack://react-complete-guide/./src/components/quotes/NoQuotesFound.module.css?2c4b","components/quotes/NoQuotesFound.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"QuoteItem_item__Q6KwW\"};","import { NavLink } from 'react-router-dom';\nimport classes from './QuoteItem.module.css';\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <NavLink to={`/quotes/${props.id}`}  className='btn'>\n        View Fullscreen\n      </NavLink>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"QuoteList_list__MLz6k\",\"sorting\":\"QuoteList_sorting__GDrEn\"};","import { Fragment } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n  \n  const queryParams = new URLSearchParams(location.search);\n  const isSortingAsc = queryParams.get('sort') === 'Asc';\n  \n\n  const changeSortingHandler = () => {\n    history.push('/quotes?sort=' + (isSortingAsc ? 'Desc' : 'Asc'));\n  }\n  \n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>Sort {isSortingAsc ? 'Desc' : 'Asc'} </button>\n      </div>\n      <ul className={classes.list}>\n        {props.quotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import QuoteList from '../quotes/QuoteList';\nimport useHttp from '../../hooks/use-http'\nimport {getAllQuotes} from '../../lib/api'\nimport { useEffect } from 'react';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport NoQuotesFound from '../quotes/NoQuotesFound'\n\nconst AllQuotes = () => {\n    const {sendRequest, status, data: loadedQuotes, error} = useHttp(getAllQuotes, true);\n    // const quoteList = useSelector(state => state.quote.quotes)\n    useEffect(() => {\n        sendRequest();\n    }, [sendRequest])\n\n    if(status === 'pending'){\n        return ( <div className='centered'>\n            <LoadingSpinner></LoadingSpinner>\n        </div> )\n    }\n\n    if(error) {\n        return <p className='centered focus'> {error} </p>\n    }\n\n    if( status === 'completed' && (!loadedQuotes || loadedQuotes.length === 0) ){\n        return <NoQuotesFound></NoQuotesFound>\n    }\n\n    return <QuoteList quotes={loadedQuotes}>\n\n    </QuoteList>\n}\n\nexport default AllQuotes;","// extracted by mini-css-extract-plugin\nexport default {\"noquotes\":\"NoQuotesFound_noquotes__EUQsM\"};","import { Link } from 'react-router-dom';\nimport classes from './NoQuotesFound.module.css';\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link className='btn' to='/new-quote'>\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n"],"names":["props","className","classes","text","author","to","id","history","useHistory","location","useLocation","isSortingAsc","URLSearchParams","search","get","Fragment","onClick","push","quotes","map","quote","useHttp","getAllQuotes","sendRequest","status","loadedQuotes","data","error","useEffect","LoadingSpinner","length","NoQuotesFound"],"sourceRoot":""}